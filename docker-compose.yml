version: '3'
services:
  psql:
    image: postgres:latest
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_MULTIPLE_DATABASES="order_db","auth_user_db","payment_db","delivery_db","inventory_db"
      - POSTGRES_USER=postgre_user
      - POSTGRES_PASSWORD=postgre_secret_password
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
      - database-data:/var/lib/postgresql/data/


  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: on-failure


  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - kafka:/data
    restart: on-failure


  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
     - "9999:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9998:9090"
    volumes:
      - ./monitoring-storage/config/prometheus.yml:/etc/prometheus/prometheus.yml


volumes:
  database-data:
  kafka:
